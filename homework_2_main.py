# список из 20 фильмов:
A = ["Дюна", "Зеленая миля", "Форрест Гамп", "Список Шиндлера", "Молчание ягнят",
    "Крестный отец", "Начало", "Джанго освобожденный", "Храброе сердце", "Дюна",
    "Брат 2", "Криминальное чтиво", "Изгой", "Назад в будущее", "Интерстеллар",
    "Темный рыцарь", "Джентельмены", "Матрица", "Остров проклятых", "Титаник"]

# A1 = [["Дюна", 2021], ["Зеленая миля", 1999], ["Форрест Гамп", 1994], ["Список Шиндлера", 1993], ["Молчание ягнят", 1991], ["Крестный отец", 1972], ["Начало", 2010], ["Джанго освобожденный", 2013], ["Храброе сердце", 1995], ["Дюна", 1984], ["Брат 2", 2000], ["Криминальное чтиво", 1994], ["Изгой", 2000], ["Назад в будущее", 1985], ["Интерстеллар", 2014], ["Темный рыцарь", 2008], ["Джентельмены", 2020], ["Матрица", 1999], ["Остров проклятых", 2010], ["Титаник", 1997]]

# словарь из тех же 20 фильмов с датой выпуска в прокат:
B = {"Дюна" : 2021, "Зеленая миля" : 1999, "Форрест Гамп" : 1994, "Список Шиндлера" : 1993, "Молчание ягнят" : 1991, "Крестный отец" : 1972, "Начало" : 2010,  "Джанго освобожденный" : 2013, "Храброе сердце" : 1995, "Дюна" : 1984, "Брат 2" : 2000, "Криминальное чтиво" : 1994, "Изгой" : 2000, "Назад в будущее" : 1985, "Интерстеллар" : 2014, "Темный рыцарь" : 2008, "Джентельмены" : 2020, "Матрица" : 1999, "Остров проклятых" : 2010, "Титаник" : 1997}

# множество из тех же 20 фильмов, создаем из того же списка:
C = set(A)

# Выполняем поиск элемента по списку, словарю и множеству:
def print_True_or_False(value):    # функция, принимающая 1 bool-аргумент (True/False), возвращая итог поиска о запрашиваемом фильме
    if value: print("В данном списке/словаре/множестве есть запрашиваемый фильм.")
    else: print("В данном списке/словаре/множестве отсутствует запрашиваемый фильм.")

search_movie = input("Введите название фильма, который хотите найти:")    # просим пользователя ввести название фильма



# Поиск элемента по списку А:
print_True_or_False(search_movie in A)    # вызываем функцию


# Поиск элемента по словарю B:
print_True_or_False(search_movie in B)    # вызываем функцию

# В данном случае ключом является само название фильма, а значением - год выпуска фильма
# Мы также можем дополнительно определить год выпуска запрашиваемого фильма из словаря через метод setdefault (доступ к значению ключа):
if search_movie in B: 
    print(f'Дата выпуска фильма "{search_movie}" - {B.setdefault(search_movie)} год')    # форматирование через f''



# Поиск элемента по множеству С, аналогично списку:
print_True_or_False(search_movie in C)



'''
Преимущества и недостатки списка А для записи фильмов:
" + ": возможность использования повторяющихся элементов (некоторые фильмы могут повторяться по названию)
" + ": использование различных типов данных в качестве элемента списка
" + ": множество методов для доступа к элементам, перезаписи, сортировки, добавления, удаления элементов
" - ": недостатков не нашел
" - ": если создать новый вложенный список с годами выпуска фильма А1 (см. выше), то, чтобы найти запрашиваемый фильм, придется использовать циклы для проверки всех элементов на наличие, способ поиска элемента list in A1 уже не сработает


Преимущества и недостатки словаря В для записи фильмов:
" + ": имеет 2 значения в качестве элемента словаря (ключ и значение), что является преимуществом для представления структуры данных, к примеру, "фильм - год", "продукт - цена", "книга - автор", "марка автомобиля - цена" и т.д.
" + ": множество методов для доступа к элементам как и списки
" + ": использование различных типов данных в качестве ключа/значения
" - ": доступ к элементам выполняется по ключу, а не по индексу


Преимущества и недостатки множества С для записи фильмов: 
" + ": множества можно сравнивать, объединять, вычитать, находить пересечения и др.
" + ": сокращенные записи методов: пересечение &, объединение | и прочие сравнения (|=, &=, ^=, -=, ^, -, >=, <=, ==)
" + ": отлично подходит для удаления повторяющихся элементов, но не в данном случае
" - ": удаляет повторяющиеся элементы (в данном списке А я специально указал 2 фильма "Дюна" (1984 год и 2021 год), в итоге при создания множества через ключевое слово set, количество элементов стало не 20, а 19; итого - мы потеряли один фильм)
" - ": неупорядоченное расположение элементов

'''